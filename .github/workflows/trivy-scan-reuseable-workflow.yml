name: Run Trivy Security Scan
on:
    workflow_call:
        inputs:
            service_name:
                required: true
                type: string
            service_path:
                required: true
                type: string
            docker_registry:
                required: true
                type: string    
        secrets:
            aws_access_key_ztna:
                required: true
            aws_secret_key_ztna:
                required: true
            slack_channel_webhook:
                required: true
            slack_horusec_channel_webhook:
                required: true
            gcr_token_ztna:
                required: true
            repo_owner_ztna:
                required: true
            gcr_token:
                required: true
            aws_s3_bucket:
                required: true
            send_grid_token:
                required: true
            google_sa_secret:
                required: true
            gsheet_id:
                required: true

jobs:
  run-trivy-security-scan:
    name: Run Trivy Scan
    runs-on: ubuntu-20.04
    
    env:
        SERVICE_NAME: ${{inputs.service_name}}
        DOCKER_REGISTRY: ${{inputs.docker_registry}}
        SERVICE_PATH: ${{inputs.service_path}}
    steps:
        - name: Check Out Code
          uses: actions/checkout@v2
          with:
            token: ${{ secrets.gcr_token_ztna }}

        - name: Login to GitHub Container Registry
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ secrets.repo_owner_ztna }}
            password: ${{ secrets.gcr_token_ztna }}
        - name: Set AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.aws_access_key_ztna }}
            aws-secret-access-key: ${{ secrets.aws_secret_key_ztna }}
            aws-region: eu-west-1
        - name: Fetch latest changes from develop to get latest .trivyignore
          run: git fetch origin develop
        
        - name: Get .trivyignore from develop and update .trivyignore 
          id: trivyignore_file
          run: |
            trivyignore_file=$(git show origin/develop:.trivyignore)
            echo "$trivyignore_file" > .trivyignore 
        - name: Fetch Image Name
          env:
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ZTNA }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY_ZTNA }}
          run: |
                SHORT_COMMIT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`
                branch_name=${GITHUB_REF##*/}
                component_name=${SERVICE_NAME}
                S3_bucket=${{ secrets.aws_s3_bucket }}
                S3_path="s3://${S3_bucket}/${branch_name}/${component_name}"
                build_version=$(aws s3 cp --quiet ${S3_path}/${component_name}.version - | awk -F';' '{print $2}')
                # IMAGE_NAME=$DOCKER_REGISTRY/$component_name:${branch_name}-${build_version}-${SHORT_COMMIT_SHA}
                if [ "${{ github.event_name }}" == "pull_request" ]; then
                    echo "IMAGE_NAME=$DOCKER_REGISTRY/$component_name:${branch_name}-${SHORT_COMMIT_SHA}" >> $GITHUB_ENV
                    echo "IMAGE_NAME=$env.IMAGE_NAME" 
                else
                    echo "IMAGE_NAME=$DOCKER_REGISTRY/$component_name:${branch_name}-${SHORT_COMMIT_SHA}" >> $GITHUB_ENV
                    echo "IMAGE_NAME=$env.IMAGE_NAME" 
                fi             

        - name: Pull Docker Image
          run: docker pull $IMAGE_NAME
        - name: Run Trivy vulnerability scanner
        
          id: trivy
          uses: aquasecurity/trivy-action@master
       
          with:
            image-ref: ${{ env.IMAGE_NAME }}
            format: 'json'
            exit-code: '1'
            ignore-unfixed: true
            vuln-type: 'os,library'
            severity: 'CRITICAL,HIGH'
            scanners: 'vuln'
            skip-dirs: '/go/,/usr/local/go/'
            output: '${{inputs.service_name}}-trivy-results' 
        - name: Upload trivy report
          if: always()
          uses: actions/upload-artifact@v2
          with:
            name: ${{inputs.service_name}}-trivy-results
            path: ./${{inputs.service_name}}-trivy-results
        - name: Send Notification to Slack
          if: ${{ failure() && steps.trivy.conclusion == 'failure' }}
          run: bash scripts/vuln_slack_notification.sh ${SERVICE_NAME} ${{ github.ref_name }}  ${{ github.run_id }} ${{ secrets.slack_horusec_channel_webhook }} Trivy "${{ steps.pr-url.outputs.MERGE_URL_SLACK }}"
        - name: Branch name
          if: (failure() && steps.trivy.conclusion == 'failure') && (startsWith(github.base_ref, 'release-v') || startsWith(github.ref, 'refs/heads/release-v') || startsWith(github.base_ref, 'pre-release-v') || startsWith(github.ref, 'refs/heads/pre-release-v') || github.base_ref == 'develop' || github.ref == 'refs/heads/develop')
          id: branch-name
          run: |
            echo "EMAIL_BRANCH=${{ github.ref_name }}"  >> $GITHUB_OUTPUT
            if [[ "$GITHUB_EVENT_NAME" == "pull_request" ]]; then
            echo "EMAIL_BRANCH=$GITHUB_HEAD_REF"  >> $GITHUB_OUTPUT
            fi
        - name: Twilio SendGrid Email
          if: (failure() && steps.trivy.conclusion == 'failure') && (startsWith(github.base_ref, 'release-v') || startsWith(github.ref, 'refs/heads/release-v') || startsWith(github.base_ref, 'pre-release-v') || startsWith(github.ref, 'refs/heads/pre-release-v') || github.base_ref == 'develop' || github.ref == 'refs/heads/develop')
          uses: mmichailidis/sendgrid-mail-action@v1.0
          with:
            mail: '<email-address>'
            from: 'Trivy Report<support@extremecloudztna.com>'
            subject: "[${{ steps.branch-name.outputs.EMAIL_BRANCH }}] Build Failed For ${{inputs.service_name}} [${{ github.run_id }}]"
            individual: true
            text: "Build Failed for the <strong>${{inputs.service_name}}</strong> in <strong>${{ steps.branch-name.outputs.EMAIL_BRANCH }}</strong> Branch <br> <br> <strong>Workflow URL</strong>: https://github.com/extremenetworks/web-controller/actions/runs/${{ github.run_id }} <br> ${{ steps.pr-url.outputs.MERGE_URL }}"
            sendgrid-token: ${{ secrets.send_grid_token }}
        - name: creating service account creds
          if: ${{ failure() && steps.trivy.conclusion == 'failure' }}
          run: |
            echo "$SA_CREDS" > ztna-project-test-a0666f83a04c.json
          shell: bash
          env:
            SA_CREDS: ${{secrets.google_sa_secret}}
        - uses: actions/setup-python@v4
          if: ${{ failure() && steps.trivy.conclusion == 'failure' }}
          with:
            python-version: '3.8'
        - name: Gsheet Script
          if: ${{ failure() && steps.trivy.conclusion == 'failure' }}
          run: |
            if [ "${{github.event_name}}" == "pull_request" ]; then
            OWNER=${{github.event.pull_request.user.login}}
            else
            OWNER=${{github.triggering_actor}}
            fi
            pip install gspread oauth2client
            python scripts/vuln_sheet.py
          env:
            GSHEET_ID: ${{ secrets.gsheet_id }}
            JSON_FILE: ${{inputs.service_name}}-trivy-results
            SERVICE_NAME: ${{inputs.service_name}}
            OWNER: $OWNER
            SCAN: Trivy    